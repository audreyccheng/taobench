"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[374],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),h=o,b=d["".concat(c,".").concat(h)]||d[h]||p[h]||a;return n?r.createElement(b,i(i({ref:t},u),{},{components:n})):r.createElement(b,i({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},507:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={},i="CockroachDB (Postgres)",l={unversionedId:"usage/drivers/cockroachdb",id:"usage/drivers/cockroachdb",title:"CockroachDB (Postgres)",description:"Dependencies",source:"@site/docs/usage/drivers/cockroachdb.md",sourceDirName:"usage/drivers",slug:"/usage/drivers/cockroachdb",permalink:"/docs/usage/drivers/cockroachdb",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"usageSidebar",previous:{title:"Contributing to TAOBench",permalink:"/docs/usage/drivers/contributing"},next:{title:"PlanetScale / TiDB (MySQL)",permalink:"/docs/usage/drivers/mysql"}},c={},s=[{value:"Dependencies",id:"dependencies",level:2},{value:"Install Postgres Libraries",id:"install-postgres-libraries",level:3},{value:"Install libpqxx",id:"install-libpqxx",level:3},{value:"Build TAOBench",id:"build-taobench",level:3},{value:"Setting up CRDB",id:"setting-up-crdb",level:2},{value:"Connecting to CRDB (Cockroach Cloud)",id:"connecting-to-crdb-cockroach-cloud",level:3},{value:"Setting the database schema",id:"setting-the-database-schema",level:3},{value:"Configuration",id:"configuration",level:3}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cockroachdb-postgres"},"CockroachDB (Postgres)"),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("p",null,"CockroachDB requires several dependencies to be installed."),(0,o.kt)("h3",{id:"install-postgres-libraries"},"Install Postgres Libraries"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"apt-get install libpq-dev postgresql\n")),(0,o.kt)("h3",{id:"install-libpqxx"},"Install ",(0,o.kt)("a",{parentName:"h3",href:"http://pqxx.org/development/libpqxx"},"libpqxx")),(0,o.kt)("p",null,"Clone the libpqxx repo"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/jtv/libpqxx.git\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/jtv/libpqxx/blob/master/BUILDING-configure.md"},"Build")," the libpqxx library:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"./configure CXX=g++-11\nmake\nsudo make install\n")),(0,o.kt)("h3",{id:"build-taobench"},"Build TAOBench"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cmake . -DWITH_CRDB=ON\nmake\n")),(0,o.kt)("h2",{id:"setting-up-crdb"},"Setting up CRDB"),(0,o.kt)("p",null,"Create a CockroachDB database. The instructions below pertain to Cockroach Cloud."),(0,o.kt)("h3",{id:"connecting-to-crdb-cockroach-cloud"},"Connecting to CRDB (Cockroach Cloud)"),(0,o.kt)("p",null,"If you are using ",(0,o.kt)("a",{parentName:"p",href:"https://cockroachlabs.cloud/"},"CockroachCloud"),', click the "Connect" button in the top right corner. If you are trying to connect through a command line interface, follow the instructions in the "Command Line" tab of the Connect modal (copied below)'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install the CRDB Client using the CLI command listed in the first step of the instructions"),(0,o.kt)("li",{parentName:"ul"},"Install the security certificate for your cluster using the second step of the instructions"),(0,o.kt)("li",{parentName:"ul"},"Connect to your CRDB cluster using the CLI command listed in the third step of the instructions")),(0,o.kt)("p",null,'If you are trying to set up your machine to connect to Cockroach Cloud through a program, follow the instructions for "Connection String" (copied below)'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install the security certificate for your cluster using the first step of the instructions"),(0,o.kt)("li",{parentName:"ul"},'Note the CRDB connection string listed in the second step of the instructions. This will be used below in the "Configuration and Build" section of the README.')),(0,o.kt)("h3",{id:"setting-the-database-schema"},"Setting the database schema"),(0,o.kt)("p",null,"Create the following tables:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"create table objects(\n    id INT primary key,\n    timestamp bigint,\n    value varchar(150));\ncreate table edges(\n    id1 INT,\n    id2 INT,\n    type INT,\n    timestamp bigint,\n    value varchar(150)),\n    primary key (id1, id2, type));\n")),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Copy the connection string for the CRDB database into ",(0,o.kt)("inlineCode",{parentName:"p"},"crdb/crdb.properties"),". For example, using CockroachCloud:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-properties"},"crdb.connectionstring=postgresql://<username>:<password>@berkeley-benchmark-7q7.aws-us-west-2.cockroachlabs.cloud:26257/defaultdb?sslmode=verify-full&sslrootcert=/home/ubuntu/Library/CockroachCloud/certs/berkeley-benchmark-ca.crt\n")))}p.isMDXComponent=!0}}]);