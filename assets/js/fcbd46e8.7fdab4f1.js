"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[667],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2004:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={},i="Installation",o={unversionedId:"usage/installation",id:"usage/installation",title:"Installation",description:"Overview",source:"@site/docs/usage/installation.md",sourceDirName:"usage",slug:"/usage/installation",permalink:"/docs/usage/installation",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"usageSidebar",next:{title:"Usage",permalink:"/docs/usage/"}},s={},c=[{value:"Overview",id:"overview",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Build",id:"build",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"installation"},"Installation"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"This page lists general steps to build ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/audreyccheng/taobench"},"TAOBench"),", an end-to-end benchmark for social network workloads.\nThis guide will explain how to run TAOBench and how to add new DB adapter layers for running requests."),(0,a.kt)("h2",{id:"dependencies"},"Dependencies"),(0,a.kt)("p",null,"To build TAOBench, install:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"a C++17 compiler"),(0,a.kt)("li",{parentName:"ul"},"CMake (version 3.7 or higher)")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Example: Ubuntu 18.04"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"apt-get update\napt-get install -y software-properties-common\nadd-apt-repository -y ppa:ubuntu-toolchain-r/test\napt-get install -y build-essential cmake g++-11\n"))),(0,a.kt)("p",null,"To use TAOBench, you will need to additionally install database-specific\nlibraries. Details can be found in each driver's documentation."),(0,a.kt)("h2",{id:"build"},"Build"),(0,a.kt)("p",null,"Clone TAOBench's ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/audreyccheng/taobench"},"Git repository")," and build with the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/audreyccheng/taobench.git\ncmake . -DWITH_<dbname>=ON\nmake\n")),(0,a.kt)("p",null,"Supply any of the following CMake flags: ",(0,a.kt)("inlineCode",{parentName:"p"},"WITH_CRDB"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"WITH_MYSQL"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"WITH_SPANNER"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"WITH_YUGABYTE")," to build the respective drivers."),(0,a.kt)("p",null,"You should now have the ",(0,a.kt)("inlineCode",{parentName:"p"},"taobench")," executable."))}p.isMDXComponent=!0}}]);